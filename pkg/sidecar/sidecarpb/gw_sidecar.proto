syntax = "proto3";

package sidecar;
option go_package = ".;sidecar";

import "google/protobuf/empty.proto";
import "sidecar.proto";


// AppInterfaceStatus represents Application Pod Interface Status.
message AppInterfaceStatus {
    // Pod Name
	string podName      = 1;
    // NSM Interface
	string nsmInterface = 2;
    // NSM IP
	string nsmIP        = 3;
    // Pod IP
	string podIP        = 4;
    // Gateway NSM Interface
	string nsmGwInterface = 5;
    // NSM IP
	string nsmGwIP        = 6;
}

// TunnelInterfaceStatus represents Tunnel Interface Status.
message TunnelInterfaceStatus  {
    // Net Interface
	string netInterface = 1;
    // Local IP
	string localIP      = 2;
    // Peer IP
	string peerIP       = 3;
    // Latency
    uint64 latency      = 4;
    // Transmit Rate
    uint64 txRate       = 5;
    // Receive Rate
    uint64 rxRate       = 6;
}

// NsmInterfaceStatus represents the status of NSM Interface to Slice Router.
message NsmInterfaceStatus {
	// NSM Interface Name
	string nsmInterfaceName = 1;
    	// NSM IP
	string nsmIP        = 2;
}

// GwPodStatus represents overall status of Pod.
message GwPodStatus {
    // Node IP.
    string nodeIP                         = 1;
    // Gateway Pod IP.
    string gatewayPodIP                   = 2;
    // Pod Status
    Status podStatus                      = 3;
    // The Tunnel Interface Status.
    TunnelInterfaceStatus tunnelStatus    = 4;
    // NSM Interface Status
    NsmInterfaceStatus  nsmIntfStatus     = 5;
    // Application Pod Interface status
    repeated AppInterfaceStatus appStatus = 6;
}

// AppPodContext represents Application Pod Context format.
message AppPodContext {
    // Pod Name
	string podName      = 1;
    // NSM Interface
	string nsmInterface = 2;
    // NSM IP
	string nsmIP        = 3;
    // Pod IP
	string podIP        = 4;
    // NSM GW peer IP
	string nsmGwPeerIP  = 5;
    // Namespace
	string namespace    = 6;
}

// SliceGwConnectionContext - Slice Gateway Connection Context.
message SliceGwConnectionContext {
    // Slice-Id
    string sliceId = 1;
    // Local slice gateway ID
    string localSliceGwId = 2;
    // Local slice gateway VPN IP
    string localSliceGwVpnIP = 3;
    // Local slice gateway-host-type  -  client/server
    SliceGwHostType localSliceGwHostType = 4;
    // Local slice gateway NSM Subnet
    string localSliceGwNsmSubnet = 5;
    // Local slice gateway Node IP
    string localSliceGwNodeIP = 6;
    // Local slice gateway Node Port
    string localSliceGwNodePort = 7;
    // Remote slice gateway ID
    string remoteSliceGwId = 8;
    // Remote slice gateway VPN IP
    string remoteSliceGwVpnIP = 9;
    // Remote-slice gateway-host-type client or server
    SliceGwHostType remoteSliceGwHostType = 10;
    // Remote slice gateway NSM subnet
    string remoteSliceGwNsmSubnet = 11;
    // Remote slice gateway Node IP
    string remoteSliceGwNodeIP = 12;
    // Remote slice gateway Node Port
    string remoteSliceGwNodePort = 13;
    // Application Pod Context
    repeated AppPodContext appContext = 14;
}

message SliceGwInterClusterQosProfile {
    // Name of the slice 
    string sliceName = 1;
    // Name of the QoS profile configured for the slice
    string sliceQosProfile = 2;
    // Priority of inter cluster traffic configured in the
    // QoS profile for the slice.
    // Current range: 0 - 3
    // Lower value signifies higher priority. A priority value
    // value of 0 should be given higher priority than a value 
    // of 3.
    uint32 interClusterTrafficPriority = 3;
}

service GwSidecarService {
    // The Interface to update the ID Token.
    rpc UpdateIDToken(Token) returns (SidecarResponse) {}
    // The Interface to get the Pod status.
    rpc GetStatus(google.protobuf.Empty) returns (GwPodStatus) {}
    // The Interface to update the connection context. It also adds the route.
    rpc UpdateConnectionContext(SliceGwConnectionContext) returns (SidecarResponse) {}
    // Update Slice QoS Profile
    rpc UpdateSliceQosProfile(SliceQosProfile) returns (SidecarResponse) {}
}
